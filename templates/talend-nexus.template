{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template will deploy a Nexus instance into an existing VPC subnet.  **WARNING** This template creates Amazon EC2 instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. QS(9999)",
    "Parameters": {
        "QSS3URL": {
            "Description": "Encapsulate variation in s3 root url for commercial or gov-cloud",
            "Type": "String",
            "Default": "s3.amazonaws.com",
            "AllowedValues": [ "s3.amazonaws.com", "s3-us-gov-west-1.amazonaws.com" ]
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).  Prefix cannot start with a slash but must end with a slash unless it is the empty string.",
            "Default": "",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).  Prefix cannot start with a slash but must end with a slash unless it is the empty string.",
            "Type": "String"
        },
        "TalendVersion": {
            "Description": "Talend Product Version",
            "Type": "String",
            "Default": "6.3.1",
            "AllowedValues": [
                "6.3.1",
                "6.4.1"
            ],
            "ConstraintDescription": "must be a valid Talend product version."
        },
        "TalendLicenseBucket": {
            "Description": "Bucket holding Talend license",
            "Type": "String",
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-) or period (.)."
        },
        "InstanceRole": {
            "Description": "Talend Server EC2 IAM Role",
            "Type": "String"
        },
        "InstanceProfile": {
            "Description": "Talend Server EC2 Instance Profile",
            "Type": "String"
        },
        "InstanceType": {
            "Description": "Talend Server EC2 instance type",
            "Type": "String",
            "Default": "t2.medium",
            "AllowedValues": [
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m4.large",
                "m4.xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "KeyName": {
            "Description": "Name of an EC2 KeyPair to enable SSH access to the Talend Server instance.",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
		"SubnetId": {
            "Description": "Talend Server subnet id.",
            "Type": "AWS::EC2::Subnet::Id"
		},
		"PrivateSubnet": {
            "Description": "Is this is a private subnet.",
            "Type": "String",
            "AllowedValues": [ "private", "public" ]
		},
		"SecurityGroupIds": {
            "Description": "Talend Server Security Group.",
            "Type": "CommaDelimitedList"
		},
        "TalendResourceBucket": {
            "Description": "Talend S3 resources bucket.",
            "Type": "String",
            "Default": "repo-quickstart-talend"
        },  
        "TalendResourceBucketRepoPath": {
            "Description": "Path to binary repository in Talend S3 resources bucket.",
            "Type": "String",
            "Default": "/"
        },
        "NexusPort": {
            "Description": "Nexus port.",
            "Type": "Number",
            "Default": "8081",
            "MinValue": "1",
            "MaxValue": "65535"
        },
        "NexusAdminUserid": {
            "Description": "Nexus administrator userid.",
            "Type": "String",
            "Default": "admin"
        },
        "NexusAdminPassword": {
            "Description": "Nexus password.",
            "Type": "String",
            "NoEcho": "true"
        },
        "NexusAdminEmail": {
            "Description": "Nexus admin email.",
            "Type": "String",
            "Default": "nexus@company.com"
        }
	},
    "Mappings": {
        "Talend": {
            "6.3.1": {
                "licenseTarget": "/home/ec2-user/tui/licenses/6.3.1",
                "baselineTarget": "/home/ec2-user/baseline",
                "generatedTarget": "/home/ec2-user/generated",
                "profile": "nexus",
                "repoTuiPath": "tui/TUI-4.5.2.tar",
                "repoS3fsPath": "s3fs/v1.82.tar.gz",
                "tuiTarget": "/home/ec2-user/tui",
                "s3fsTarget": "/home/ec2-user/s3fs",
                "tuiConfigMapping": "conf/6.3.1/tui_config_mappings.sh",
                "tuiConfigOverrideOption": "",
				"talendRepoDir": "/opt/repo",
                "tuiRepoDir": "/opt/tui/repo",
                "sparkJarsKeyPrefix": "spark",
                "sparkJarsTarget": "/var/lib/spark/jars"
            },
            "6.4.1": {
                "licenseTarget": "/home/ec2-user/tui/licenses/6.4.1",
                "baselineTarget": "/home/ec2-user/baseline",
                "generatedTarget": "/home/ec2-user/generated",
                "profile": "nexus",
                "repoTuiPath": "tui/TUI-5.4.0.tar",
                "repoS3fsPath": "s3fs/v1.82.tar.gz",
                "tuiTarget": "/home/ec2-user/tui",
                "s3fsTarget": "/home/ec2-user/s3fs",
                "tuiConfigMapping": "conf/6.4.1/tui_config_mappings.sh",
                "tuiConfigOverrideOption": "-oc",
				"talendRepoDir": "/opt/repo",
                "tuiRepoDir": "/opt/tui/repo",
                "sparkJarsKeyPrefix": "spark",
                "sparkJarsTarget": "/var/lib/spark/jars"
            }
        },
        "AWSRegionArch2AMI": {
            "us-gov-west-1": {
                "HVM64": "ami-8c1be5f6"
            },
            "us-east-1": {
                "HVM64": "ami-8c1be5f6"
            },
            "us-east-2": {
                "HVM64": "ami-c5062ba0"
            },
            "us-west-1": {
                "HVM64": "ami-02eada62"
            },
            "us-west-2": {
                "HVM64": "ami-e689729e"
            },
            "ca-central-1": {
                "HVM64": "ami-fd55ec99"
            },
            "sa-east-1": {
                "HVM64": "ami-f1344b9d"
            },
            "eu-west-1": {
                "HVM64": "ami-acd005d5"
            },
            "eu-west-2": {
                "HVM64": "ami-1a7f6d7e"
            },
            "eu-central-1": {
                "HVM64": "ami-c7ee5ca8"
            },
            "ap-northeast-1": {
                "HVM64": "ami-2a69be4c"
            },
            "ap-northeast-2": {
                "HVM64": "ami-9bec36f5"
            },
            "ap-south-1": {
                "HVM64": "ami-4fc58420"
            },
            "ap-southeast-1": {
                "HVM64": "ami-0797ea64"
            },
            "ap-southeast-2": {
                "HVM64": "ami-8536d6e7"
            },
            "cn-north-1": {
                "HVM64": "ami-f239abcb"
            }
        }
    },
	"Conditions": {
        "isPrivateSubnet": {
            "Fn::Equals": [
                { "Ref": "PrivateSubnet" },
                "private"
            ]
        },
		"isPublicSubnet": {
			"Fn::Not": [ { "Condition": "isPrivateSubnet" } ]
		}
	},
    "Resources": {
        "TalendServerInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": { "Ref": "InstanceType" },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        { "Ref": "AWS::Region" },
                        "HVM64"
                    ]
                },
                "Tags": [ { "Key": "Name", "Value": "Nexus" } ],
                "KeyName": { "Ref": "KeyName" },
				"SecurityGroupIds": { "Ref": "SecurityGroupIds" },
				"SubnetId": { "Ref": "SubnetId" },
                "IamInstanceProfile": { "Ref": "InstanceProfile" },
                "BlockDeviceMappings" : [
                   {
                      "DeviceName" : "/dev/xvda",
                      "Ebs" : { "VolumeSize" : "50" }
                   }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "yum -y update\n",
                                "while ! yum install -y aws-cfn-bootstrap ; do sleep 10; done\n",
								"#fix ec2 hostname resolution\n",
                                "wget ",
                                { "Fn::Sub": "http://${QSS3BucketName}.${QSS3URL}/${QSS3KeyPrefix}scripts/bootstrap/ec2-metadata" },
                                "\n",
								"chmod +x ec2-metadata\n",
                                "wget --no-check-certificate ",
                                { "Fn::Sub": "http://${QSS3BucketName}.${QSS3URL}/${QSS3KeyPrefix}scripts/bootstrap/update_hosts.sh" },
                                "\n",
								"chmod +x update_hosts.sh\n",
                                "./update_hosts.sh\n",
                                "# Install the files and packages from the metadata\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource TalendServerInstance ",
                                "         --configsets All ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource TalendServerInstance ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": { "Ref": "InstanceRole" }
                    }
                },

                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "All": [
                            "Download",
                            "Configure",
                            "Install"
                        ]
                    },
                    "Download": {
                        "commands": {
                            "00-copy-license": {
                                "command": {
                                    "Fn::Sub": "aws s3 cp s3://${TalendLicenseBucket}/license /home/ec2-user/generated/licenses/license"
                                }
                            },
                            "01-download-qss3bucket": {
                                "command": {
                                    "Fn::Sub": "aws --region=${AWS::Region} s3 cp s3://${QSS3BucketName}/modules/talend/scripts /home/ec2-user/baseline --recursive"
                                }
                            },
                            "02-download-tui": {
                                "command": {
                                    "Fn::Sub": [
                                        "aws --region=${AWS::Region} s3 cp s3://${TalendResourceBucket}/${repoTuiPath} /home/ec2-user/tui.tar; chmod 400 /home/ec2-user/tui.tar; chown ec2-user:ec2-user /home/ec2-user/tui.tar",
                                        {
                                            "repoTuiPath": { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "repoTuiPath" ] }
                                        }
                                    ]
                                }
                            },
                            "03-download-s3fs": {
                                "command": {
                                    "Fn::Sub": [
                                        "aws --region=${AWS::Region} s3 cp s3://${TalendResourceBucket}/${repoS3fsPath} /home/ec2-user/s3fs.tgz; chmod 400 /home/ec2-user/s3fs.tgz; chown ec2-user:ec2-user /home/ec2-user/s3fs.tgz",
                                        {
                                            "repoS3fsPath": { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "repoS3fsPath" ] }
                                        }
                                    ]
                                }
                            },
                            "04-unzip-s3fs": {
                                "command": "mkdir s3fs; tar --strip-components=1 -C ./s3fs -xzvpf s3fs.tgz",
                                "cwd": "/home/ec2-user"
                            },
                            "05-unzip-tui": {
                                "command": "mkdir tui; tar --strip-components=1 -C ./tui -xvpf tui.tar",
                                "cwd": "/home/ec2-user"
                            },
                            "06-chmod-qss3bucket": {
                                "command": {
                                    "Fn::Join": [ "",
                                        [
                                            "find ",
                                            { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "baselineTarget" ] },
                                            " -type f -name \"*.sh\" -exec chmod u+x {} \\;"
                                        ]
                                    ]
                                }
                            },
                            "07-chmod-ec2-metadata": {
                                "command": {
                                    "Fn::Join": [ "",
                                        [
                                            "find ",
                                            { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "baselineTarget" ] },
                                            " -type f -name \"ec2-metadata\" -exec chmod u+x {} \\;"
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "Configure": {
                        "files": {
                            "/home/ec2-user/generated/setenv.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "export TALEND_VERSION=",
                                                        {
                                                            "Ref": "TalendVersion"
                                                        }
                                                    ]
                                                ]
                                            },
                                            {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "export TALEND_REPO=",
                                                        {
                                                            "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "talendRepoDir"]
                                                        }
                                                    ]
                                                ]
                                            },
                                            {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "export TALEND_NEXUS_PORT=",
                                                        {
                                                            "Ref": "NexusPort"
                                                        }
                                                    ]
                                                ]
                                            },
                                            {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "export TALEND_NEXUS_ADMIN=",
                                                        {
                                                            "Ref": "NexusAdminUserid"
                                                        }
                                                    ]
                                                ]
                                            },
                                            {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "export TALEND_NEXUS_PASSWORD=",
                                                        {
                                                            "Ref": "NexusAdminPassword"
                                                        }
                                                    ]
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "mode": "000400",
								"owner": "ec2-user",
								"group": "ec2-user"
                            }
                        },
                        "commands": {
                            "01-load-baseline": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "cp -rfT ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    { "Ref": "TalendVersion" },
                                                    "baselineTarget"
                                                ]
                                            },
											"/tui/ ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    { "Ref": "TalendVersion" },
                                                    "tuiTarget"
                                                ]
                                            },
											"/"
                                        ]
                                    ]
                                }
                            },
                            "02-load-license": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "cp ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    { "Ref": "TalendVersion" },
                                                    "generatedTarget"
                                                ]
                                            },
											"/licenses/* ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    { "Ref": "TalendVersion" },
                                                    "licenseTarget"
                                                ]
                                            }
                                        ]
                                    ]
                                }
                            },
                            "03-load-env": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "mv ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    { "Ref": "TalendVersion" },
                                                    "generatedTarget"
                                                ]
                                            },
											"/setenv.sh ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    { "Ref": "TalendVersion" },
                                                    "tuiTarget"
                                                ]
                                            }
                                        ]
                                    ]
                                }
                            },
                            "04-load-instance-env": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    { "Ref": "TalendVersion" },
                                                    "tuiTarget"
                                                ]
                                            },
											"/scripts/create-instance-env.sh ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    { "Ref": "TalendVersion" },
                                                    "tuiTarget"
                                                ]
                                            },
											"/instance-env.sh"
                                        ]
                                    ]
                                }
                            },
                            "05-load-server-env": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    { "Ref": "TalendVersion" },
                                                    "tuiTarget"
                                                ]
                                            },
											"/scripts/create-",
											{ "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "profile" ] },
											"-env.sh ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    { "Ref": "TalendVersion" },
                                                    "tuiTarget"
                                                ]
                                            },
											"/server-env.sh"
                                        ]
                                    ]
                                }
                            },
                            "06-load-tui-config-mapping": {
                                "command": {
                                    "Fn::Sub": [
                                        "cp ${baselineTarget}/tui/${tuiConfigMapping} ${tuiTarget}",
                                        {
                                            "baselineTarget": { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "baselineTarget" ] },
                                            "tuiConfigMapping": { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "tuiConfigMapping" ] },
                                            "tuiTarget": { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "tuiTarget" ] }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Install": {
                        "commands": {
                            "01-install-s3fs": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "set -e",
                                            "; export DEBUG_LOG=true",
                                            "; source ",
                                            { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "baselineTarget" ] },
                                            "/s3fs/s3fs-util.sh",
                                            "; s3fs_build",
                                            " ", { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "s3fsTarget" ] },
                                            "; s3fs_config",
                                            "; s3fs_mount",
                                            " ", { "Ref": "TalendResourceBucket" },
                                            " ", { "Ref": "TalendResourceBucketRepoPath" },
                                            " ", { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "talendRepoDir" ] },
                                            "; ",
                                            { "Fn::Sub":
                                                [
                                                    "${tuiTarget}/scripts/tui-repo.sh '${talendRepoDir}' '${tuiRepoDir}'",
                                                    {
                                                        "tuiTarget": { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "tuiTarget" ] },
                                                        "tuiRepoDir": { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "tuiRepoDir" ] },
                                                        "talendRepoDir": { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "talendRepoDir" ] } 
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "cwd": { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "s3fsTarget" ] }
                            },
                            "02-install-jre": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "source ",
                                            { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "baselineTarget" ] },
                                            "/java/jre-installer.sh;",
                                            "jre_installer_install"
                                        ]
                                    ]
                                }
                            },
                            "03-install-talend": {
                                "command": {
                                    "Fn::Join": [ 
                                        "", 
                                        [
                                            "source /etc/profile.d/jre.sh; ",
                                            "source ./setenv.sh; ",
                                            "source ./instance-env.sh; ",
                                            "source ./server-env.sh; ",
                                            {
                                                "Fn::Sub": [
                                                    "source ${tuiTarget}/${tuiConfigMapping}; ",
                                                    {
                                                        "tuiTarget": { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "tuiTarget" ] },
                                                        "tuiConfigMapping": { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "tuiConfigMapping" ] }
                                                    }
                                                ] 
                                            },
                                            {
                                                "Fn::Sub": [
                                                    "./install -q ${tuiConfigOverrideOption} ${TalendVersion} ${profile}; ",
                                                    {
                                                        "profile": { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "profile" ] },
                                                        "tuiConfigOverrideOption": { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "tuiConfigOverrideOption" ] }
                                                    }
                                                ]
                                            }
                                        ] 
                                    ]
                                },
                                "cwd": {
                                    "Fn::FindInMap": [
                                        "Talend",
                                        { "Ref": "TalendVersion" },
                                        "tuiTarget"
                                    ]
                                }
                            },
                            "04-is-nexus-started": {
                                "command": {
                                    "Fn::Sub": [
                                        "${baselineDir}/nexus/isNexusStarted.sh",
                                        { "baselineDir": { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "baselineTarget" ] } }
                                    ]
                                }
                            },
                            "05-create-nexus-user": {
                                "command": {
                                    "Fn::Sub": [
                                        "${baselineDir}/nexus/create-nexus-user.sh \"${NexusAdminUserid}\" \"${NexusAdminPassword}\" \"${NexusAdminEmail}\" ",
                                        { "baselineDir": { "Fn::FindInMap": [ "Talend", { "Ref": "TalendVersion" }, "baselineTarget" ] } }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "Outputs": {
        "TalendServerInstanceId": {
            "Value": { "Ref": "TalendServerInstance" },
            "Description": "Talend Server EC2 resource Id",
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}:instanceId"
				}
			}
        },
        "publicIp": {
			"Condition": "isPublicSubnet",
            "Value": { "Fn::GetAtt": [ "TalendServerInstance", "PublicIp" ] },
            "Description": "Talend public IP",
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}:publicIp" 
				} 
			}
        },
        "privateIp": {
            "Value": { "Fn::GetAtt": [ "TalendServerInstance", "PrivateIp" ] },
            "Description": "Talend private IP",
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}:privateIp" 
				}
			}
        },
        "publicDnsName": {
			"Condition": "isPublicSubnet",
            "Value": { "Fn::GetAtt": [ "TalendServerInstance", "PublicDnsName" ] },
            "Description": "Talend public DNS",
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}:publicDnsName"
				}
			}
        },
        "privateDnsName": {
            "Value": { "Fn::GetAtt": [ "TalendServerInstance", "PrivateDnsName" ] },
            "Description": "Talend private DNS",
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}:privateDnsName" 
				}
			}
        },
        "nexusPort": {
            "Value": { "Ref": "NexusPort" },
            "Description": "Nexus Port",
			"Export": {
				"Name": {
                    "Fn::Sub": "${AWS::StackName}:nexusPort"
				}
			}
        }
    }
}
