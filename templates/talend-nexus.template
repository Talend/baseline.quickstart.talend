{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template will deploy a Nexus instance into an existing VPC subnet.  **WARNING** This template creates Amazon EC2 instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. QS(9999)",
    "Parameters": {
        "QSS3URL": {
            "Description": "Encapsulate variation in s3 root url for commercial or gov-cloud",
            "Type": "String",
            "Default": "https://s3.amazonaws.com",
            "AllowedValues": [ "https://s3.amazonaws.com", "https://s3-us-gov-west-1.amazonaws.com" ]
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "baseline.quickstart.talend",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).  Prefix cannot start with a slash but must end with a slash unless it is the empty string.",
            "Default": "",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).  Prefix cannot start with a slash but must end with a slash unless it is the empty string.",
            "Type": "String"
        },
        "InstanceRole": {
            "Description": "Talend Server EC2 IAM Role",
            "Type": "String"
        },
        "InstanceProfile": {
            "Description": "Talend Server EC2 Instance Profile",
            "Type": "String"
        },
        "InstanceType": {
            "Description": "Talend Server EC2 instance type",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t1.micro",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "KeyName": {
            "Description": "Name of an EC2 KeyPair to enable SSH access to the Talend Server instance.",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
		"SubnetId": {
            "Description": "Talend Server subnet id.",
            "Type": "AWS::EC2::Subnet::Id"
		},
		"PrivateSubnet": {
            "Description": "Is this is a private subnet.",
            "Type": "String",
			"Default": "private",
            "AllowedValues": [ "private", "public" ]
		},
		"SecurityGroupIds": {
            "Description": "Talend Server Security Group.",
            "Type": "CommaDelimitedList"
		},
        "TalendLicenseUrl": {
            "Description": "Url to license file received in email.",
            "Type": "String"
        },
        "TalendResourceBucket": {
            "Description": "Talend S3 resources bucket.",
            "Type": "String",
            "Default": "repo-quickstart-talend"
        },  
        "TalendResourceBucketRepoPath": {
            "Description": "Path to binary repository in Talend S3 resources bucket.",
            "Type": "String",
            "Default": "/"
        },
        "NexusPort": {
            "Description": "Nexus port.",
            "Type": "Number",
            "Default": "8081",
            "MinValue": "1",
            "MaxValue": "65535"
        },
        "NexusAdminUserid": {
            "Description": "Nexus administrator userid.",
            "Type": "String",
            "Default": "admin"
        },
        "NexusAdminPassword": {
            "Description": "Nexus password.",
            "Type": "String",
            "Default": "Talend123",
            "NoEcho": "true"
        }
	},
    "Mappings": {
        "Talend": {
            "license": {
                "licenseTarget": "/home/ec2-user/TUI-4.5.2/licenses/6.3.1"
            },
            "baseline": {
                "baselineTarget": "/home/ec2-user/baseline",
                "generatedTarget": "/home/ec2-user/generated"
            },
            "tui": {
                "profile": "nexus",
                "tuiUrl": "https://s3.amazonaws.com/repo-quickstart-talend/tui/TUI-4.5.2.tar",
                "tuiTarget": "/home/ec2-user/TUI-4.5.2",
				"talendRepoDir": "/opt/repo",
                "tuiRepo": "/opt/tui/repo"
            },
            "s3fs": {
                "s3fsUrl": "https://s3.amazonaws.com/repo-quickstart-talend/s3fs/v1.82.tar.gz",
                "s3fsTarget": "/home/ec2-user/s3fs-fuse-1.82"
            }
        },
        "AWSInstanceType2Arch": {
            "t1.micro": {
                "Arch": "PV64"
            },
            "t2.micro": {
                "Arch": "HVM64"
            },
            "t2.small": {
                "Arch": "HVM64"
            },
            "t2.medium": {
                "Arch": "HVM64"
            },
            "m1.small": {
                "Arch": "PV64"
            },
            "m1.medium": {
                "Arch": "PV64"
            },
            "m1.large": {
                "Arch": "PV64"
            },
            "m1.xlarge": {
                "Arch": "PV64"
            },
            "m2.xlarge": {
                "Arch": "PV64"
            },
            "m2.2xlarge": {
                "Arch": "PV64"
            },
            "m2.4xlarge": {
                "Arch": "PV64"
            },
            "m3.medium": {
                "Arch": "HVM64"
            },
            "m3.large": {
                "Arch": "HVM64"
            },
            "m3.xlarge": {
                "Arch": "HVM64"
            },
            "m3.2xlarge": {
                "Arch": "HVM64"
            },
            "c1.medium": {
                "Arch": "PV64"
            },
            "c1.xlarge": {
                "Arch": "PV64"
            },
            "c3.large": {
                "Arch": "HVM64"
            },
            "c3.xlarge": {
                "Arch": "HVM64"
            },
            "c3.2xlarge": {
                "Arch": "HVM64"
            },
            "c3.4xlarge": {
                "Arch": "HVM64"
            },
            "c3.8xlarge": {
                "Arch": "HVM64"
            },
            "c4.large": {
                "Arch": "HVM64"
            },
            "c4.xlarge": {
                "Arch": "HVM64"
            },
            "c4.2xlarge": {
                "Arch": "HVM64"
            },
            "c4.4xlarge": {
                "Arch": "HVM64"
            },
            "c4.8xlarge": {
                "Arch": "HVM64"
            },
            "g2.2xlarge": {
                "Arch": "HVMG2"
            },
            "r3.large": {
                "Arch": "HVM64"
            },
            "r3.xlarge": {
                "Arch": "HVM64"
            },
            "r3.2xlarge": {
                "Arch": "HVM64"
            },
            "r3.4xlarge": {
                "Arch": "HVM64"
            },
            "r3.8xlarge": {
                "Arch": "HVM64"
            },
            "i2.xlarge": {
                "Arch": "HVM64"
            },
            "i2.2xlarge": {
                "Arch": "HVM64"
            },
            "i2.4xlarge": {
                "Arch": "HVM64"
            },
            "i2.8xlarge": {
                "Arch": "HVM64"
            },
            "d2.xlarge": {
                "Arch": "HVM64"
            },
            "d2.2xlarge": {
                "Arch": "HVM64"
            },
            "d2.4xlarge": {
                "Arch": "HVM64"
            },
            "d2.8xlarge": {
                "Arch": "HVM64"
            },
            "hi1.4xlarge": {
                "Arch": "HVM64"
            },
            "hs1.8xlarge": {
                "Arch": "HVM64"
            },
            "cr1.8xlarge": {
                "Arch": "HVM64"
            },
            "cc2.8xlarge": {
                "Arch": "HVM64"
            }
        },
        "AWSRegionArch2AMI": {
            "us-east-1": {
                "PV64": "ami-1ccae774",
                "HVM64": "ami-1ecae776",
                "HVMG2": "ami-8c6b40e4"
            },
            "us-west-2": {
                "PV64": "ami-ff527ecf",
                "HVM64": "ami-e7527ed7",
                "HVMG2": "ami-abbe919b"
            },
            "us-west-1": {
                "PV64": "ami-d514f291",
                "HVM64": "ami-d114f295",
                "HVMG2": "ami-f31ffeb7"
            },
            "eu-west-1": {
                "PV64": "ami-bf0897c8",
                "HVM64": "ami-a10897d6",
                "HVMG2": "ami-d5bc24a2"
            },
            "eu-central-1": {
                "PV64": "ami-ac221fb1",
                "HVM64": "ami-a8221fb5",
                "HVMG2": "ami-7cd2ef61"
            },
            "ap-northeast-1": {
                "PV64": "ami-27f90e27",
                "HVM64": "ami-cbf90ecb",
                "HVMG2": "ami-6318e863"
            },
            "ap-southeast-1": {
                "PV64": "ami-acd9e8fe",
                "HVM64": "ami-68d8e93a",
                "HVMG2": "ami-3807376a"
            },
            "ap-southeast-2": {
                "PV64": "ami-ff9cecc5",
                "HVM64": "ami-fd9cecc7",
                "HVMG2": "ami-89790ab3"
            },
            "sa-east-1": {
                "PV64": "ami-bb2890a6",
                "HVM64": "ami-b52890a8",
                "HVMG2": "NOT_SUPPORTED"
            },
            "cn-north-1": {
                "PV64": "ami-fa39abc3",
                "HVM64": "ami-f239abcb",
                "HVMG2": "NOT_SUPPORTED"
            }
        }
    },
	"Conditions": {
        "isPrivateSubnet": {
            "Fn::Equals": [
                { "Ref": "PrivateSubnet" },
                "private"
            ]
        },
		"isPublicSubnet": {
			"Fn::Not": [ { "Condition": "isPrivateSubnet" } ]
		}
	},
    "Resources": {
        "TalendServerInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": { "Ref": "InstanceType" },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        { "Ref": "AWS::Region" },
                        { "Fn::FindInMap": [
                                "AWSInstanceType2Arch",
                                { "Ref": "InstanceType" },
                                "Arch"
                            ]
                        }
                    ]
                },
                "Tags": [ { "Key": "Name", "Value": "Nexus" } ],
                "KeyName": { "Ref": "KeyName" },
				"SecurityGroupIds": { "Ref": "SecurityGroupIds" },
				"SubnetId": { "Ref": "SubnetId" },
                "IamInstanceProfile": { "Ref": "InstanceProfile" },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "yum -y update\n",
                                "while ! yum install -y aws-cfn-bootstrap ; do sleep 10; done\n",
								"#fix ec2 hostname resolution\n",
                                "wget ",
                                { "Fn::Sub": "${QSS3URL}/${QSS3BucketName}/${QSS3KeyPrefix}scripts/bootstrap/ec2-metadata" },
                                "\n",
								"chmod +x ec2-metadata\n",
                                "wget ",
                                { "Fn::Sub": "${QSS3URL}/${QSS3BucketName}/${QSS3KeyPrefix}scripts/bootstrap/update_hosts.sh" },
                                "\n",
								"chmod +x update_hosts.sh\n",
                                "./update_hosts.sh\n",
                                "# Install the files and packages from the metadata\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource TalendServerInstance ",
                                "         --configsets All ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource TalendServerInstance ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": { "Ref": "InstanceRole" }
                    }
                },

                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "All": [
                            "Download",
                            "Configure",
                            "Install"
                        ]
                    },
                    "Download": {
                        "files": {
                            "/home/ec2-user/s3fs.tgz": {
                                "source": {
                                    "Fn::FindInMap": [
                                        "Talend",
                                        "s3fs",
                                        "s3fsUrl"
                                    ]
                                },
                                "owner": "ec2-user",
                                "group": "ec2-user",
                                "mode": "000400"
                            },
                            "/home/ec2-user/tui.tar": {
                                "source": {
                                    "Fn::FindInMap": [
                                        "Talend",
                                        "tui",
                                        "tuiUrl"
                                    ]
                                },
                                "owner": "ec2-user",
                                "group": "ec2-user",
                                "mode": "000400"
                            },
                            "/home/ec2-user/generated/licenses/license": {
                                "source": { "Ref": "TalendLicenseUrl" },
                                "owner": "ec2-user",
                                "group": "ec2-user",
                                "mode": "000400"
                            }
                        },
                        "commands": {
                            "01-unzip-s3fs": {
                                "command": "tar xzvpf s3fs.tgz",
                                "cwd": "/home/ec2-user"
                            },
                            "02-unzip-tui": {
                                "command": "tar xvpf tui.tar",
                                "cwd": "/home/ec2-user"
                            },
                            "03-copy-qss3bucket": {
                                "command": {
                                    "Fn::Sub": "aws s3 cp s3://${QSS3BucketName}/${QSS3KeyPrefix}scripts /home/ec2-user/baseline --recursive"
                                }
                            },
                            "04-chmod-qss3bucket": {
                                "command": {
                                    "Fn::Join": [ "",
                                        [
                                            "find ",
                                            { "Fn::FindInMap": [ "Talend", "baseline", "baselineTarget" ] },
                                            " -type f -name \"*.sh\" -exec chmod u+x {} \\;"
                                        ]
                                    ]
                                }
                            },
                            "05-chmod-ec2-metadata": {
                                "command": {
                                    "Fn::Join": [ "",
                                        [
                                            "find ",
                                            { "Fn::FindInMap": [ "Talend", "baseline", "baselineTarget" ] },
                                            " -type f -name \"ec2-metadata\" -exec chmod u+x {} \\;"
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "Configure": {
                        "files": {
                            "/home/ec2-user/generated/setenv.sh": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "export TALEND_REPO=",
                                                        {
                                                            "Fn::FindInMap": [ "Talend", "tui", "talendRepoDir"]
                                                        }
                                                    ]
                                                ]
                                            },
                                            {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "export TALEND_NEXUS_PORT=",
                                                        {
                                                            "Ref": "NexusPort"
                                                        }
                                                    ]
                                                ]
                                            },
                                            {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "export TALEND_NEXUS_ADMIN=",
                                                        {
                                                            "Ref": "NexusAdminUserid"
                                                        }
                                                    ]
                                                ]
                                            },
                                            {
                                                "Fn::Join": [
                                                    "",
                                                    [
                                                        "export TALEND_NEXUS_PASSWORD=",
                                                        {
                                                            "Ref": "NexusAdminPassword"
                                                        }
                                                    ]
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "mode": "000400",
								"owner": "ec2-user",
								"group": "ec2-user"
                            }
                        },
                        "commands": {
                            "01-load-baseline": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "cp -rfT ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    "baseline",
                                                    "baselineTarget"
                                                ]
                                            },
											"/tui/ ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    "tui",
                                                    "tuiTarget"
                                                ]
                                            },
											"/"
                                        ]
                                    ]
                                }
                            },
                            "02-load-license": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "cp ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    "baseline",
                                                    "generatedTarget"
                                                ]
                                            },
											"/licenses/* ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    "license",
                                                    "licenseTarget"
                                                ]
                                            }
                                        ]
                                    ]
                                }
                            },
                            "03-load-env": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "mv ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    "baseline",
                                                    "generatedTarget"
                                                ]
                                            },
											"/setenv.sh ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    "tui",
                                                    "tuiTarget"
                                                ]
                                            }
                                        ]
                                    ]
                                }
                            },
                            "04-load-instance-env": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    "tui",
                                                    "tuiTarget"
                                                ]
                                            },
											"/scripts/create-instance-env.sh ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    "tui",
                                                    "tuiTarget"
                                                ]
                                            },
											"/instance-env.sh"
                                        ]
                                    ]
                                }
                            },
                            "05-load-server-env": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    "tui",
                                                    "tuiTarget"
                                                ]
                                            },
											"/scripts/create-",
											{ "Fn::FindInMap": [ "Talend", "tui", "profile" ] },
											"-env.sh ",
                                            {
                                                "Fn::FindInMap": [
                                                    "Talend",
                                                    "tui",
                                                    "tuiTarget"
                                                ]
                                            },
											"/server-env.sh"
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "Install": {
                        "commands": {
                            "01-install-s3fs": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "set -e",
                                            "; source ",
                                            { "Fn::FindInMap": [ "Talend", "baseline", "baselineTarget" ] },
                                            "/s3fs/s3fs-util.sh",
                                            "; echo s3fs_build; s3fs_build ",
                                            { "Fn::FindInMap": [ "Talend", "s3fs", "s3fsTarget" ] },
                                            "; echo s3fs_config; s3fs_config",
                                            "; echo s3fs_mount; s3fs_mount",
                                            " ", { "Ref": "TalendResourceBucket" },
                                            " ", { "Ref": "TalendResourceBucketRepoPath" },
                                            " ", { "Fn::FindInMap": [ "Talend", "tui", "talendRepoDir" ] },
                                            "; ",
                                            { "Fn::Sub":
                                                [
                                                    "${tuiTarget}/scripts/tui-repo.sh '${talendRepoDir}' '${tuiRepo}'",
                                                    {
                                                        "tuiTarget": { "Fn::FindInMap": [ "Talend", "tui", "tuiTarget" ] },
                                                        "tuiRepo": { "Fn::FindInMap": [ "Talend", "tui", "tuiRepo" ] },
                                                        "talendRepoDir": { "Fn::FindInMap": [ "Talend", "tui", "talendRepoDir" ] } 
                                                    }
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                "cwd": { "Fn::FindInMap": [ "Talend", "s3fs", "s3fsTarget" ] }
                            },
                            "02-install-jre": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "source ",
                                            { "Fn::FindInMap": [ "Talend", "baseline", "baselineTarget" ] },
                                            "/java/jre-installer.sh;",
                                            "jre_installer_install"
                                        ]
                                    ]
                                }
                            },
                            "03-install-talend": {
                                "command": {
                                    "Fn::Join": [ 
                                        "", 
                                        [
                                            "source /etc/profile.d/jre.sh; ",
                                            "source ./setenv.sh; ",
                                            "source ./instance-env.sh; ",
                                            "source ./server-env.sh; ",
                                            "./install -q ",
                                            { "Fn::FindInMap": [ "Talend", "tui", "profile" ] }
                                        ] 
                                    ]
                                },
                                "cwd": {
                                    "Fn::FindInMap": [
                                        "Talend",
                                        "tui",
                                        "tuiTarget"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "Outputs": {
        "TalendServerInstanceId": {
            "Value": { "Ref": "TalendServerInstance" },
            "Description": "Talend Server EC2 resource Id",
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}:instanceId"
				}
			}
        },
        "publicIp": {
			"Condition": "isPublicSubnet",
            "Value": { "Fn::GetAtt": [ "TalendServerInstance", "PublicIp" ] },
            "Description": "Talend public IP",
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}:publicIp" 
				} 
			}
        },
        "privateIp": {
            "Value": { "Fn::GetAtt": [ "TalendServerInstance", "PrivateIp" ] },
            "Description": "Talend private IP",
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}:privateIp" 
				}
			}
        },
        "publicDnsName": {
			"Condition": "isPublicSubnet",
            "Value": { "Fn::GetAtt": [ "TalendServerInstance", "PublicDnsName" ] },
            "Description": "Talend public DNS",
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}:publicDns"
				}
			}
        },
        "privateDnsName": {
            "Value": { "Fn::GetAtt": [ "TalendServerInstance", "PrivateDnsName" ] },
            "Description": "Talend private DNS",
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}:privateDns" 
				}
			}
        },
        "nexusPort": {
            "Value": { "Ref": "NexusPort" },
            "Description": "Nexus Port",
			"Export": {
				"Name": {
                    "Fn::Sub": "${AWS::StackName}:nexusPort"
				}
			}
        }
    }
}
